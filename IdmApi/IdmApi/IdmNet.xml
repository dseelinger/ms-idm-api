<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IdmNet</name>
    </assembly>
    <members>
        <member name="T:IdmNet.IdmNetClientFactory">
            <summary>
            This class is used to help construct an IdmNet Client object
            </summary>
        </member>
        <member name="M:IdmNet.IdmNetClientFactory.BuildClient">
            <summary>
            Build and initialize an IdmNet Client object ready for use
            </summary>
            <returns>Newly initialized IdmNet Client</returns>
        </member>
        <member name="M:IdmNet.IdmNetClientFactory.GetEnv(System.String)">
            <summary>
            Get an environment variable
            </summary>
            <param name="environmentVariableName">Name of the environment variable</param>
            <returns>Environment variable value</returns>
        </member>
        <member name="T:IdmNet.Models.AttributeInfoResource">
            <summary>
            Instatntiate just for testing - holds attributes common to AttributeTypeDescription and BindingDescription
            </summary>
        </member>
        <member name="T:IdmNet.Models.KeywordedResource">
            <summary>
            Instatiate just for tests - holds attributes common among several classes: Name and UsageKeyword
            </summary>
        </member>
        <member name="T:IdmNet.Models.IdmResource">
            <summary>
            Model to represents a basic resource in the Identity Manager Resource
            </summary>
        </member>
        <member name="M:IdmNet.Models.IdmResource.#ctor">
            <summary>
            Parameterless constructor
            </summary>
        </member>
        <member name="M:IdmNet.Models.IdmResource.GetAttr(System.String)">
            <summary>
            Get a particular attribute and its values by name
            </summary>
            <param name="attrName">Name of the attribute to retrieve from memory</param>
            <returns></returns>
        </member>
        <member name="M:IdmNet.Models.IdmResource.GetAttrValue(System.String)">
            <summary>
            Get just a single value from an attribute object by name
            </summary>
            <param name="attrName">Name of the attribute to retrieve</param>
            <returns>Single (or first) value of the named attribute</returns>
        </member>
        <member name="M:IdmNet.Models.IdmResource.GetAttrValues(System.String)">
            <summary>
            Get all attribute values from an attribute object by name
            </summary>
            <param name="attrName">Name of the attribute to retrieve</param>
            <returns>list of attrbute values</returns>
        </member>
        <member name="M:IdmNet.Models.IdmResource.SetAttrValue(System.String,System.String)">
            <summary>
            Set just a single value on a named attribute object
            </summary>
            <param name="attrName">Name of the attribute to set</param>
            <param name="value">Value to set for the attribute</param>
        </member>
        <member name="M:IdmNet.Models.IdmResource.SetAttrValues(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Set all attribute values on an named attribute object
            </summary>
            <param name="attrName">Name of the attribute to retrieve</param>
            <param name="values">list of attrbute values</param>
        </member>
        <member name="M:IdmNet.Models.IdmResource.GetAttr``1(System.String,``0)">
            <summary>
            Get the complex object that is backing a single-valued reference attribute in IdmNet.
            </summary>
            <typeparam name="T">Complex Object's type, such as "Person" for Creator</typeparam>
            <param name="attrName">Name of the single-valued attribute to retrieve</param>
            <param name="backingField">Object that contains the representation for the reference type</param>
            <returns>Strongly-typed single value for the Attribute</returns>
        </member>
        <member name="M:IdmNet.Models.IdmResource.GetMultiValuedAttr``1(System.String,System.Collections.Generic.List{``0})">
            <summary>
            Get the list of complex objects that is backing a multi-valued reference attribute in IdmNet.
            </summary>
            <typeparam name="T">Complex Object's type, such as "Person" for a Group object's Owners</typeparam>
            <param name="attrName">Name of the multi-valued attribute to retrieve</param>
            <param name="backingField">List of objects that contains the available representations for the references</param>
            <returns>Strongly-typed list of values for the Attribute</returns>
        </member>
        <member name="M:IdmNet.Models.IdmResource.SetMultiValuedAttr``1(System.String,System.Collections.Generic.List{``0}@,System.Collections.Generic.List{``0})">
            <summary>
            Set the list of complex objects that is backing a multi-valued reference attribute in IdmNet.
            </summary>
            <typeparam name="T">Complex Object's type, such as "Person" for a Group object's Owners</typeparam>
            <param name="attrName">Name of the multi-valued attribute to set</param>
            <param name="backingField">List of objects that will contain the representations for the references</param>
            <param name="values">List of objects that contains the representations for the references</param>
        </member>
        <member name="M:IdmNet.Models.IdmResource.AttrToDateTime(System.String)">
            <summary>
            Convert the named attribute to a DateTime value
            </summary>
            <param name="attrName">Attribute Name</param>
            <returns>DateTime value (Nullable)</returns>
        </member>
        <member name="M:IdmNet.Models.IdmResource.AttrToBool(System.String)">
            <summary>
            Convert the named attribute to a Boolean value
            </summary>
            <param name="attrName">Attribute Name</param>
            <returns>Boolean value (Nullable)</returns>
        </member>
        <member name="M:IdmNet.Models.IdmResource.AttrToInteger(System.String)">
            <summary>
            Convert the named attribute to an Integer value
            </summary>
            <param name="attrName">Attribute Name</param>
            <returns>Integer value (Nullable)</returns>
        </member>
        <member name="P:IdmNet.Models.IdmResource.Attributes">
            <summary>
            List of attributes for which we have data for this particular object.  Note that due to performance 
            reasons, there may be other attributes and values in the identity manager service, but they may not have been
            retrieved yet. 
            </summary>
        </member>
        <member name="P:IdmNet.Models.IdmResource.ObjectID">
            <summary>
            (aka Resource ID) The value of the attribute is a globally unique identifier (GUID) assigned by FIM to 
            each resource when it is created. Note that it is not required here since this class also represents 
            resources that may not have been created as well as existing resources.
            </summary>
        </member>
        <member name="P:IdmNet.Models.IdmResource.ObjectType">
            <summary>
            (aka Resource Type) The resource type of a resource. This attribute is assigned its value when the 
            resource is created in the FIM service database by the FIM service. It cannot be modified by any user.
            </summary>
        </member>
        <member name="P:IdmNet.Models.IdmResource.CreatedTime">
            <summary>
            (aka Created Time) The time when the resource is created in the FIM service database. This attribute is 
            assigned its value by the FIM service. It cannot be modified by any user.
            </summary>
        </member>
        <member name="P:IdmNet.Models.IdmResource.Creator">
            <summary>
            This is a reference attribute that refers to the resource that directly created the resource in the FIM 
            service database. This attribute is assigned its value by the FIM service. It cannot be modified by any 
            user.
            </summary>
        </member>
        <member name="P:IdmNet.Models.IdmResource.DeletedTime">
            <summary>
            (aka Deleted Time) The time when the current resource is deleted from the FIM service database. This 
            attribute is assigned its value by the FIM service. It cannot be modified by any user.
            </summary>
        </member>
        <member name="P:IdmNet.Models.IdmResource.Description">
            <summary>
            Resource Description
            </summary>
        </member>
        <member name="P:IdmNet.Models.IdmResource.DetectedRulesList">
            <summary>
            (aka Detected Rules List) The synchronization rules detected for resources in external systems.
            </summary>
        </member>
        <member name="P:IdmNet.Models.IdmResource.DisplayName">
            <summary>
            (aka Display Name) Display name for the resource.
            </summary>
        </member>
        <member name="P:IdmNet.Models.IdmResource.ExpectedRulesList">
            <summary>
            (aka Expected Rules List) This resource has been added to these Synchronization Rules and will be 
            manifested in external systems according to the Synchronization Rule definitions.
            </summary>
        </member>
        <member name="P:IdmNet.Models.IdmResource.ExpirationTime">
            <summary>
            (aka Expiration Time) The date and time when the resource expires. The appropriate Management Policy Rule 
            will delete the resource when the current date and time is later than the date and time specified in this 
            attribute.
            </summary>
        </member>
        <member name="P:IdmNet.Models.IdmResource.Locale">
            <summary>
            The region and language for which the representation of a resource has been adapted.
            </summary>
        </member>
        <member name="P:IdmNet.Models.IdmResource.MVObjectID">
            <summary>
            (aka MV Resource ID) The GUID of an entry in the FIM metaverse corresponding to this resource.
            </summary>
        </member>
        <member name="P:IdmNet.Models.IdmResource.ResourceTime">
            <summary>
            (aka Resource Time) The date and time of a representation of a resource. This attribute is updated by the 
            FIM service. This attribute can be used to define time triggered Management Policy Rules.
            </summary>
        </member>
        <member name="P:IdmNet.Models.IdmResource.Item(System.String)">
            <summary>
            Resource Indexer - get's the attribute of the resource object as indexed by name.
            </summary>
            <param name="attributeName">Index by attribute name</param>
        </member>
        <member name="M:IdmNet.Models.KeywordedResource.#ctor">
            <summary>
            Parameterless CTOR
            </summary>
        </member>
        <member name="M:IdmNet.Models.KeywordedResource.#ctor(IdmNet.Models.IdmResource)">
            <summary>
            Base CTOR
            </summary>
            <param name="baseClass">Base class</param>
        </member>
        <member name="M:IdmNet.Models.KeywordedResource.CloneFrom(IdmNet.Models.IdmResource)">
            <summary>
            Clone attributes from another object into this one.
            </summary>
            <param name="other">Other resource</param>
        </member>
        <member name="P:IdmNet.Models.KeywordedResource.Name">
            <summary>
            Resource Name
            </summary>
        </member>
        <member name="P:IdmNet.Models.KeywordedResource.UsageKeyword">
            <summary>
            List of alternate email addresses for the person (used by AD/Exchange)
            </summary>
        </member>
        <member name="M:IdmNet.Models.AttributeInfoResource.#ctor">
            <summary>
            Parameterless CTOR
            </summary>
        </member>
        <member name="M:IdmNet.Models.AttributeInfoResource.#ctor(IdmNet.Models.IdmResource)">
            <summary>
            Base CTOR
            </summary>
            <param name="resource">Base class</param>
        </member>
        <member name="P:IdmNet.Models.AttributeInfoResource.IntegerMaximum">
            <summary>
            For an Integer attribute, this is the maximum value, inclusive
            </summary>
        </member>
        <member name="P:IdmNet.Models.AttributeInfoResource.IntegerMinimum">
            <summary>
            For an Integer attribute, this is the minimum value, inclusive
            </summary>
        </member>
        <member name="P:IdmNet.Models.AttributeInfoResource.Localizable">
            <summary>
            A true indicates this attribute can be localized.  Only allowed for String DataTypes
            </summary>
        </member>
        <member name="P:IdmNet.Models.AttributeInfoResource.StringRegex">
            <summary>
             String Regular Expression - This is a .Net Regex pattern that defines what string values are allowed.
            </summary>
        </member>
        <member name="T:IdmNet.Models.AttributeTypeDescription">
            <summary>
            Attribute Type Description - This describes an attribute type
            </summary>
        </member>
        <member name="M:IdmNet.Models.AttributeTypeDescription.#ctor">
            <summary>
            Parameterless CTOR
            </summary>
        </member>
        <member name="M:IdmNet.Models.AttributeTypeDescription.#ctor(IdmNet.Models.IdmResource)">
            <summary>
            Base CTOR
            </summary>
            <param name="idmResource">base class</param>
        </member>
        <member name="P:IdmNet.Models.AttributeTypeDescription.DataType">
            <summary>
            (Binary|Boolean|DateTime|Integer|Reference|String|Text)
            </summary>
        </member>
        <member name="P:IdmNet.Models.AttributeTypeDescription.MultiValued">
            <summary>
            (required) A true indicates this attribute can be localized.  Only allowed for String DataTypes
            </summary>
        </member>
        <member name="T:IdmNet.Models.BindingDescription">
            <summary>
             Binding Description - This resource describes the relationship between a resource type and an attribute type.
            </summary>
        </member>
        <member name="M:IdmNet.Models.BindingDescription.#ctor">
            <summary>
            Parameterless CTOR
            </summary>
        </member>
        <member name="M:IdmNet.Models.BindingDescription.#ctor(IdmNet.Models.IdmResource)">
            <summary>
            Base CTOR
            </summary>
            <param name="idmResource">base class</param>
        </member>
        <member name="P:IdmNet.Models.BindingDescription.Required">
            <summary>
            A true indicates this attribute can be localized.  Only allowed for String DataTypes
            </summary>
        </member>
        <member name="P:IdmNet.Models.BindingDescription.BoundAttributeType">
            <summary>
            Attribute Type - The binding's attribute type
            </summary>
        </member>
        <member name="P:IdmNet.Models.BindingDescription.BoundObjectType">
            <summary>
            Attribute Type - The binding's attribute type
            </summary>
        </member>
        <member name="T:IdmNet.Models.Group">
            <summary>
            Group class - covers both Security Groups and Distribution Lists
            </summary>
        </member>
        <member name="T:IdmNet.Models.SecurityIdentifierResource">
            <summary>
            Base class for Person and Group
            </summary>
        </member>
        <member name="F:IdmNet.Models.SecurityIdentifierResource.ForcedObjType">
            <summary>
            Object type which this object is forced to use
            </summary>
        </member>
        <member name="M:IdmNet.Models.SecurityIdentifierResource.#ctor">
            <summary>
            Default/parameterless constructor
            </summary>
        </member>
        <member name="M:IdmNet.Models.SecurityIdentifierResource.#ctor(IdmNet.Models.IdmResource)">
            <summary>
            Create a Security Identifier Resource from a plain resource object
            </summary>
            <param name="resource"></param>
        </member>
        <member name="M:IdmNet.Models.SecurityIdentifierResource.Clone(IdmNet.Models.SecurityIdentifierResource)">
            <summary>
            Create a new SecurityIdentifier resource from another
            </summary>
            <param name="resource"></param>
        </member>
        <member name="P:IdmNet.Models.SecurityIdentifierResource.AccountName">
            <summary>
            (aka Account Name) Account name for the resource
            </summary>
        </member>
        <member name="P:IdmNet.Models.SecurityIdentifierResource.Domain">
            <summary>
            Domain name for the resource
            </summary>
        </member>
        <member name="P:IdmNet.Models.SecurityIdentifierResource.DomainConfiguration">
            <summary>
            Reference tot he Domain Name configuration object for the resource (if any)
            </summary>
        </member>
        <member name="P:IdmNet.Models.SecurityIdentifierResource.Email">
            <summary>
            Primary email address for the resource
            </summary>
        </member>
        <member name="P:IdmNet.Models.SecurityIdentifierResource.MailNickname">
            <summary>
            Email Alias for the resource
            </summary>
        </member>
        <member name="P:IdmNet.Models.SecurityIdentifierResource.ObjectSID">
            <summary>
            Security Identifier for the resource
            </summary>
        </member>
        <member name="P:IdmNet.Models.SecurityIdentifierResource.SIDHistory">
            <summary>
            Contains previous SIDs used for the resource if the resource was moved from another domain.
            </summary>
        </member>
        <member name="M:IdmNet.Models.Group.#ctor">
            <summary>
            Parameterless CTOR
            </summary>
        </member>
        <member name="M:IdmNet.Models.Group.#ctor(IdmNet.Models.SecurityIdentifierResource)">
            <summary>
            Build a Group object from a SecurityIdentifierResource object
            </summary>
            <param name="resource">base class</param>
        </member>
        <member name="M:IdmNet.Models.Group.#ctor(IdmNet.Models.IdmResource)">
            <summary>
            Construct a Group from an IdMResource
            </summary>
            <param name="resource">base class</param>
        </member>
        <member name="P:IdmNet.Models.Group.ObjectType">
            <summary>
            Object Type (can only be Person)
            </summary>
        </member>
        <member name="P:IdmNet.Models.Group.Owner">
            <summary>
            List of owners of the Group
            </summary>
        </member>
        <member name="P:IdmNet.Models.Group.ComputedMember">
            <summary>
            Resources in the set that are computed from the membership filter.  List of resources that are currently 
            computed as being members of the group. Should only be retrieved from Identity Manger.  Use ExplicitMember
            to manually add members to the group.
            </summary>
        </member>
        <member name="P:IdmNet.Models.Group.msidmDeferredEvaluation">
            <summary>
            Determines when evaluation of the group happens with respect to request processing - real-time or deferred.
            </summary>
        </member>
        <member name="P:IdmNet.Models.Group.DisplayedOwner">
            <summary>
            Single Person who is listed as the owner of the group
            </summary>
        </member>
        <member name="P:IdmNet.Models.Group.Filter">
            <summary>
            A predicate defining a subset of the resources.
            </summary>
        </member>
        <member name="P:IdmNet.Models.Group.ExplicitMember">
            <summary>
            (aka Manually-managed Membership) Members in the group that are manually managed.
            </summary>
        </member>
        <member name="P:IdmNet.Models.Group.MembershipAddWorkflow">
            <summary>
            Membership Add Workflow - Workflow that fires when someone is manually added to the group. Note that this
            is a string and not a reference object in the Identity Manager Schema.
            </summary>
        </member>
        <member name="P:IdmNet.Models.Group.MembershipLocked">
            <summary>
            If true, no one may be manually added to the group.
            </summary>
        </member>
        <member name="P:IdmNet.Models.Group.Scope">
            <summary>
            Group scope.  Must be one of (DomainLocal|Global|Universal)
            </summary>
        </member>
        <member name="P:IdmNet.Models.Group.Temporal">
            <summary>
            Defined by a filter that matches resources based on date and time attributes
            </summary>
        </member>
        <member name="T:IdmNet.Models.ObjectTypeDescription">
            <summary>
            Resource Type Description - This describes a resource type.
            </summary>
        </member>
        <member name="T:IdmNet.Models.Person">
            <summary>
            Person object
            </summary>
        </member>
        <member name="M:IdmNet.Models.Person.#ctor">
            <summary>
            Person's parmeterless constructor
            </summary>
        </member>
        <member name="M:IdmNet.Models.Person.#ctor(IdmNet.Models.SecurityIdentifierResource)">
            <summary>
            Construct a Person from a SecurityIdentifierResource
            </summary>
            <param name="resource">base class</param>
        </member>
        <member name="M:IdmNet.Models.Person.#ctor(IdmNet.Models.IdmResource)">
            <summary>
            Construct a Person from an IdMResource
            </summary>
            <param name="resource">base class</param>
        </member>
        <member name="P:IdmNet.Models.Person.ObjectType">
            <summary>
            For a Person object this can only be 'Person'
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.AD_UserCannotChangePassword">
            <summary>
            (aka AD User Cannot Change Password) Will sync from AD to track whether the user is locked out from changing their AD password
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.Address">
            <summary>
            Person's Address
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.Assistant">
            <summary>
            Person's Assistance - reference to another person
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.City">
            <summary>
            Person's City
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.Company">
            <summary>
            Person's Company
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.CostCenter">
            <summary>
            Person's Cost Center
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.CostCenterName">
            <summary>
            Person's Cost Center Name
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.Country">
            <summary>
            A Person's Country/Region
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.Department">
            <summary>
            A Person's Department
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.EmployeeEndDate">
            <summary>
            A Person's end date as an employee
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.EmployeeID">
            <summary>
            A Person's Employee ID (often some other unique ID)
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.EmployeeStartDate">
            <summary>
            A Person's start date as an employee
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.EmployeeType">
            <summary>
            A Person's employee type.  By default must be "Contractor", "Intern", or "Full Time Employee" unless 
            change in Identity Manager's Schema.
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.OfficeFax">
            <summary>
            A Person's Office Fax number
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.FirstName">
            <summary>
            A Person's first name (givenName in AD)
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.FreezeCount">
            <summary>
            Tracks the number of times the user has unsuccessfully attempted to run an AuthN WF
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.FreezeLevel">
            <summary>
            Defines the amount of functionality that is disabled due to unsuccessful AuthN WF attempts
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.JobTitle">
            <summary>
            A Person's job title
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.LastName">
            <summary>
            A Person's last name (sn in AD)
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.LastResetAttemptTime">
            <summary>
            The Last time the person attempted a reset (to be used in conjunction with Freeze Time and Freeze Level)
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.AuthNLockoutRegistrationID">
            <summary>
            This is the list of gate registration ids used by the lockout gate
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.LoginName">
            <summary>
            A Person's Country/Region
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.Manager">
            <summary>
            A Person's Manager
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.MiddleName">
            <summary>
            The person's middle name
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.MobilePhone">
            <summary>
            The person's mobile phone number
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.OfficeLocation">
            <summary>
            The person's office location
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.OfficePhone">
            <summary>
            The person's office phone number
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.msidmOneTimePasswordEmailAddress">
            <summary>
            One-Time Password Email Address - Email address used to deliver a one-time password to the user.
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.msidmOneTimePasswordMobilePhone">
            <summary>
            One-Time Password Mobile Phone - Mobile phone number used to deliver a one-time password to the user.
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.Photo">
            <summary>
            A photograph of the person
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.PostalCode">
            <summary>
            The person's postal/zip code
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.ProxyAddressCollection">
            <summary>
            List of alternate email addresses for the person (used by AD/Exchange)
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.IsRASEnabled">
            <summary>
            True if the person has RAS Access Permission
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.Register">
            <summary>
            True if the person is registered for self-service password reset
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.RegistrationRequired">
            <summary>
            Tracks if the user must register for SSPR
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.ResetPassword">
            <summary>
            This attribute is used to trigger a password reset process.
            </summary>
        </member>
        <member name="P:IdmNet.Models.Person.TimeZone">
            <summary>
            Reference tot he Domain Name configuration object for the resource (if any)
            </summary>
        </member>
        <member name="T:IdmNet.SoapFaultException">
            <summary>
            Exception thrown when a SOAP Fault is detected/returned from SOAP web service calls.
            </summary>
        </member>
        <member name="M:IdmNet.SoapFaultException.#ctor">
            <summary>
            Parameterless CTOR
            </summary>
        </member>
        <member name="M:IdmNet.SoapFaultException.#ctor(System.String)">
            <summary>
            Create a new Soap Fault with a particular message
            </summary>
            <param name="message">Message to return to catching methods</param>
        </member>
        <member name="M:IdmNet.SoapFaultException.#ctor(System.String,System.Exception)">
            <summary>
            Create a new Soap Fault with a particular message and inner exception
            </summary>
            <param name="message">Message to return to catching methods</param>
            <param name="inner">Not normally used - just included for completeness</param>
        </member>
        <member name="M:IdmNet.SoapFaultException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            For serializing
            </summary>
            <param name="info">For serializing</param>
            <param name="context">For serializing</param>
        </member>
        <member name="M:IdmNet.SoapFaultException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            For serializing
            </summary>
            <param name="info">For serializing</param>
            <param name="context">For serializing</param>
        </member>
        <member name="T:IdmNet.Models.IdmAttribute">
            <summary>
            Represents an individual Identity Manager resource's attribute and value
            </summary>
        </member>
        <member name="M:IdmNet.Models.IdmAttribute.#ctor">
            <summary>
            Parameterless Constructor
            </summary>
        </member>
        <member name="M:IdmNet.Models.IdmAttribute.ToBool">
            <summary>
            Convert the Value (string) of an attribute to boolean, if the attribute is defined as a boolean
            in Identity Manager
            </summary>
            <returns>
            Boolean value of the attribute  or null if the attribute is "not present" in the Identity Manager 
            resource (and booleans may not be multi-valued attributes in Identity Manager)
            </returns>
        </member>
        <member name="M:IdmNet.Models.IdmAttribute.ToDateTime">
            <summary>
            Convert the Value (string) of an attribute to DateTime, if the attribute is defined as a DateTime object
            in Identity Manager
            </summary>
            <returns>Single (or first) DateTime value of the attribute or null if the attribute is "not present"
            in the Identity Manager resource</returns>
        </member>
        <member name="M:IdmNet.Models.IdmAttribute.ToDateTimes">
            <summary>
            Convert the Values (strings) of an multi-valued attribute to DateTime, if the attribute is defined as a DateTime
            in Identity Manager
            </summary>
            <returns>List of DateTime values of the attribute or null if the attribute is "not present"
            in the Identity Manager resource</returns>
        </member>
        <member name="M:IdmNet.Models.IdmAttribute.ToBinary">
            <summary>
            Convert the Value (string) of an attribute to a binary value (byte[]), if the attribute is defined as 
            binary in Identity Manager
            </summary>
            <returns>Single (or first) binary value of the attribute or null if the attribute is "not present"
            in the Identity Manager resource</returns>
        </member>
        <member name="M:IdmNet.Models.IdmAttribute.ToBinaries">
            <summary>
            Convert the Values (strings) of an multi-valued attribute to binary, if the attribute is defined as Binary
            in Identity Manager
            </summary>
            <returns>List of binary values of the attribute or null if the attribute is "not present"
            in the Identity Manager resource</returns>
        </member>
        <member name="M:IdmNet.Models.IdmAttribute.ToInteger">
            <summary>
            Convert the Value (string) of an attribute to a integer value if the attribute is defined as such in
            Identity Manager
            </summary>
            <returns>
            Single (or first) integer value of the attribute or null if there are no values for the attribute
            </returns>
        </member>
        <member name="M:IdmNet.Models.IdmAttribute.ToIntegers">
            <summary>
            Convert the Values (strings) of an multi-valued attribute to integers, if the attribute is defined as 
            integer in Identity Manager
            </summary>
            <returns>List of integer values of the attribute or null if the attribute is "not present" in the Identity 
            Manager resource</returns>
        </member>
        <member name="P:IdmNet.Models.IdmAttribute.Name">
            <summary>
            Attribute name
            </summary>
        </member>
        <member name="P:IdmNet.Models.IdmAttribute.Values">
            <summary>
            List ov values for this attribute
            </summary>
        </member>
        <member name="P:IdmNet.Models.IdmAttribute.Value">
            <summary>
            Makes the native multi-valued nature of the Attribute look like a single-valued attribute
            </summary>
        </member>
        <member name="T:IdmNet.IdmNetClient">
            <summary>
            This is the primary class in the IdmNet assembly.  It is the .NET client used to perform CRUD operations on
            objects/resources in the Identity Manager Service database.
            </summary>
        </member>
        <member name="M:IdmNet.IdmNetClient.#ctor(SearchClient,ResourceFactoryClient,ResourceClient)">
            <summary>
            Primary constructor for the IdmNetClient.  Though this is public and can be called, the normal thing to
            do is to use IdmNetClientFactory.BuildClient().  This is available in case you want to build the client
            based on different assumptions made by the factory builder.  For example, if you wanted to use a different
            client credentials mechanism, WCF binding, or endpoints
            </summary>
            <param name="searchClient">
            This is the SOAP client used to connect to Identity Manager for search functionality (WS-Enumeration - 
            Enumerate and Pull operations)
            </param>
            <param name="factoryClient">
            This is the SOAP client used to create new objects/resources in Identity Manager (WS-Transfer - Create 
            operation)
            </param>
            <param name="resourceClient">
            This is the SOAP client used to modify existing objects/resources in Identity Manager 
            </param>
        </member>
        <member name="M:IdmNet.IdmNetClient.SearchAsync(IdmNet.SearchCriteria)">
            <summary>
            Search the Identity Manager  (async await)
            </summary>
            <param name="criteria"></param>
            <returns></returns>
        </member>
        <member name="M:IdmNet.IdmNetClient.PostAsync(IdmNet.Models.IdmResource)">
            <summary>
            Create Object/Resource in Identity Manager Service  (async await)
            </summary>
            <param name="resource">Resource to be created</param>
            <returns>Resource with its newly assigned ObjectID</returns>
        </member>
        <member name="M:IdmNet.IdmNetClient.DeleteAsync(System.String)">
            <summary>
            Delete an object in the Identity Manager service (async await)
            </summary>
            <param name="objectID">Resource ID for the object to be deleted</param>
            <returns></returns>
        </member>
        <member name="M:IdmNet.IdmNetClient.AddValueAsync(System.String,System.String,System.String)">
            <summary>
            Add a value to a multi-valued attribute in the Identity Manager service  (async await)
            </summary>
            <remarks>
            While all attributes in an IdmResource are technically multi-valued, this method only works on attributes
            that are marked as multi-valued in the Identity Manager service.
            </remarks>
            <param name="objectID">Resource ID for the object containing the multi-valued attribute</param>
            <param name="attrName">Name of the Multi-Valued attribute to which a value will be added</param>
            <param name="attrValue">Value to be added to the Multi-Valued attribute</param>
            <returns>Task (async/await) of the asynchronous operation</returns>
        </member>
        <member name="M:IdmNet.IdmNetClient.RemoveValueAsync(System.String,System.String,System.String)">
            <summary>
            Remove a value from a multi-valued attribute in the Identity Manager service (async await)
            </summary>
            <remarks>
            While all attributes in an IdmResource are technically multi-valued, this method only works on attributes
            that are marked as multi-valued in the Identity Manager service.
            </remarks>
            <param name="objectID">Resource ID for the object containing the multi-valued attribute</param>
            <param name="attrName">Name of the Multi-Valued attribute from which a value will be removed</param>
            <param name="attrValue">Value to be removed from the Multi-Valued attribute</param>
            <returns>Task (async/await) of the asynchronous operation</returns>
        </member>
        <member name="M:IdmNet.IdmNetClient.ReplaceValueAsync(System.String,System.String,System.String)">
            <summary>
            Replace/Set the value for a single-valued attribute in the Identity Manager service (async await)
            </summary>
            <remarks>
            While all attributes in an IdmResource are technically multi-valued, this method only works on attributes
            that are marked as single-valued in the Identity Manager service.
            </remarks>
            <param name="objectID">Resource ID for the object containing the single-valued attribute</param>
            <param name="attrName">Name of the Single-Valued attribute which will have its value set/replaced</param>
            <param name="attrValue">Value to be set for the Single-Valued attribute</param>
            <returns>Task (async/await) of the asynchronous operation</returns>
        </member>
        <member name="M:IdmNet.IdmNetClient.PutAsync(System.String,IdmNet.SoapModels.Change[])">
            <summary>
            Make multiple changes to a particular Identity Manager service object/resource (async await)
            </summary>
            <param name="objectID">Resource ID for the object containing the attributes to be modified</param>
            <param name="changes">
            Set of changes (Multi-valued "Adds/Removes and Single-valued "Replaces" to be made for the single object
            </param>
            <returns>Task (async/await) of the asynchronous operation</returns>
        </member>
        <member name="T:IdmNet.SoapModels.IdmSoapBinding">
            <summary>
            This is the default WCF binding for IdMNet
            </summary>
        </member>
        <member name="F:IdmNet.SoapModels.IdmSoapBinding.DefaultMaxDataSize">
            <summary>
            Settled on this size after some initial real-world testing
            </summary>
        </member>
        <member name="M:IdmNet.SoapModels.IdmSoapBinding.#ctor">
            <summary>
            Parameterless CTOR
            </summary>
        </member>
        <member name="M:IdmNet.SoapModels.IdmSoapBinding.#ctor(System.Int32)">
            <summary>
            CTOR with a specific data size (don't think it's actually used currently, but could be useful in a 
            debuggin scenario
            </summary>
            <param name="maxDataSize"></param>
        </member>
        <member name="T:IdmNet.SearchCriteria">
            <summary>
            Class for defining searching operations
            </summary>
        </member>
        <member name="P:IdmNet.SearchCriteria.XPath">
            <summary>
            Identity Manager XPath Filter for the search
            </summary>
        </member>
        <member name="P:IdmNet.SearchCriteria.Attributes">
            <summary>
            Attributes to return in matching resources
            </summary>
        </member>
        <member name="P:IdmNet.SearchCriteria.SortAttribute">
            <summary>
            Name of the attribute by which to sort the results
            </summary>
        </member>
        <member name="P:IdmNet.SearchCriteria.SortDecending">
            <summary>
            If true, then sort the returned resources in descending order
            </summary>
        </member>
        <member name="P:IdmNet.SearchCriteria.PageSize">
            <summary>
            Number of resources to return per Pull operation
            </summary>
        </member>
        <member name="T:IdmNet.SoapConstants">
            <summary>
            Constants used for serializing SOAP objects
            </summary>
        </member>
        <member name="F:IdmNet.SoapConstants.EnumeratePortAndPath">
            <summary>
            Constant for serializing Identity Manager objects - not for normal use.
            </summary>
        </member>
        <member name="F:IdmNet.SoapConstants.FactoryPortAndPath">
            <summary>
            Constant for serializing Identity Manager objects - not for normal use.
            </summary>
        </member>
        <member name="F:IdmNet.SoapConstants.ResourcePortAndPath">
            <summary>
            Constant for serializing Identity Manager objects - not for normal use.
            </summary>
        </member>
        <member name="F:IdmNet.SoapConstants.EnumerateAction">
            <summary>
            Constant for serializing Identity Manager objects - not for normal use.
            </summary>
        </member>
        <member name="F:IdmNet.SoapConstants.CreateAction">
            <summary>
            Constant for serializing Identity Manager objects - not for normal use.
            </summary>
        </member>
        <member name="F:IdmNet.SoapConstants.DeleteAction">
            <summary>
            Constant for serializing Identity Manager objects - not for normal use.
            </summary>
        </member>
        <member name="F:IdmNet.SoapConstants.PutAction">
            <summary>
            Constant for serializing Identity Manager objects - not for normal use.
            </summary>
        </member>
        <member name="F:IdmNet.SoapConstants.RmNamespace">
            <summary>
            Constant for serializing Identity Manager objects - not for normal use.
            </summary>
        </member>
        <member name="F:IdmNet.SoapConstants.EnumerationNamespace">
            <summary>
            Constant for serializing Identity Manager objects - not for normal use.
            </summary>
        </member>
        <member name="F:IdmNet.SoapConstants.IdentityAttributeTypeDialect">
            <summary>
            Constant for serializing Identity Manager objects - not for normal use.
            </summary>
        </member>
        <member name="F:IdmNet.SoapConstants.DirectoryAccess">
            <summary>
            Constant for serializing Identity Manager objects - not for normal use.
            </summary>
        </member>
        <member name="F:IdmNet.SoapConstants.Transfer">
            <summary>
            Constant for serializing Identity Manager objects - not for normal use.
            </summary>
        </member>
        <member name="F:IdmNet.SoapConstants.Addressing">
            <summary>
            Constant for serializing Identity Manager objects - not for normal use.
            </summary>
        </member>
        <member name="T:IdmNet.SoapModels.PullInfo">
            <summary>
            Yet another SOAP Model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.PullInfo.EnumerateResponse">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.PullInfo.PageSize">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.PullInfo.EnumerationContext">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="T:IdmNet.SoapModels.Filter">
            <summary>
            Yet another SOAP Model
            </summary>
        </member>
        <member name="M:IdmNet.SoapModels.Filter.#ctor">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="M:IdmNet.SoapModels.Filter.#ctor(System.String)">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.Filter.Dialect">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.Filter.Query">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="T:IdmNet.SoapModels.PullAdjustment">
            <summary>
            Yet another SOAP Model
            </summary>
        </member>
        <member name="M:IdmNet.SoapModels.PullAdjustment.#ctor">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.PullAdjustment.EnumerationDirection">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.PullAdjustment.StartingIndex">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="T:IdmNet.SoapModels.EnumerationContext">
            <summary>
            Yet another SOAP Model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.EnumerationContext.CurrentIndex">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.EnumerationContext.EnumerationDirection">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.EnumerationContext.Expires">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.EnumerationContext.Filter">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.EnumerationContext.Selection">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="T:IdmNet.SoapModels.EnumerationCount">
            <summary>
            Yet another SOAP Model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.EnumerationCount.Count">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="T:IdmNet.SoapModels.EnumerateResponse">
            <summary>
            Yet another SOAP Model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.EnumerateResponse.EnumerationContext">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.EnumerateResponse.EnumerationCount">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.EnumerateResponse.Expires">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="T:IdmNet.SoapModels.Pull">
            <summary>
            Yet another SOAP Model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.Pull.EnumerationContext">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.Pull.MaxElements">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.Pull.PullAdjustment">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="T:IdmNet.SoapModels.PullResponse">
            <summary>
            Yet another SOAP Model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.PullResponse.EndOfSequence">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.PullResponse.EnumerationContext">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.PullResponse.Items">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="T:IdmNet.SoapModels.Enumerate">
            <summary>
            Yet another SOAP Model
            Enumeration Info (can't change class name, though)
            This is the main object that gets serialized for the Enumerate SOAP call
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.Enumerate.Filter">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.Enumerate.Selection">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.Enumerate.Sorting">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="T:IdmNet.SoapModels.Sorting">
            <summary>
            Yet another SOAP Model
            </summary>
        </member>
        <member name="M:IdmNet.SoapModels.Sorting.#ctor">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.Sorting.Dialect">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.Sorting.SortingAttribute">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="T:IdmNet.SoapModels.SortingAttribute">
            <summary>
            Yet another SOAP Model
            </summary>
        </member>
        <member name="M:IdmNet.SoapModels.SortingAttribute.#ctor">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.SortingAttribute.Ascending">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.SortingAttribute.AttributeName">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="T:IdmNet.SoapModels.AddRequest">
            <summary>
            Yet another SOAP Model
            Note: all these "models" are simply required for the SOAP calls to work.  They can't really be refactored in a nice way. 
            </summary>
        </member>
        <member name="M:IdmNet.SoapModels.AddRequest.#ctor">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.AddRequest.Dialect">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.AddRequest.AttributeTypeAndValue">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="T:IdmNet.SoapModels.AttributeTypeAndValue">
            <summary>
            Yet another SOAP Model
            </summary>
        </member>
        <member name="M:IdmNet.SoapModels.AttributeTypeAndValue.#ctor">
            <summary>
            Parameterless Constructor
            </summary>
        </member>
        <member name="M:IdmNet.SoapModels.AttributeTypeAndValue.#ctor(System.String,System.String)">
            <summary>
            Create new AttributeTypeAndValue with an attribute name and value
            </summary>
            <param name="attributeName"></param>
            <param name="attrValue"></param>
        </member>
        <member name="P:IdmNet.SoapModels.AttributeTypeAndValue.AttributeName">
            <summary>
            Don't set this directly - only use the constructor
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.AttributeTypeAndValue.AttributeValue">
            <summary>
            Don't set this directly - only use the constructor
            </summary>
        </member>
        <member name="T:IdmNet.SoapModels.ResourceCreated">
            <summary>
            Yet another SOAP Model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.ResourceCreated.EndpointReference">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="T:IdmNet.SoapModels.EndpointReference">
            <summary>
            Yet another SOAP Model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.EndpointReference.Address">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.EndpointReference.ReferenceProperties">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="T:IdmNet.SoapModels.ReferenceProperties">
            <summary>
            Yet another SOAP Model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.ReferenceProperties.ResourceReferenceProperty">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="T:IdmNet.SoapModels.ResourceReferenceProperty">
            <summary>
            Yet another SOAP Model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.ResourceReferenceProperty.Value">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="T:IdmNet.SoapModels.ModifyRequest">
            <summary>
            Yet another SOAP Model
            </summary>
        </member>
        <member name="M:IdmNet.SoapModels.ModifyRequest.#ctor">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.ModifyRequest.Change">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.ModifyRequest.Dialect">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="T:IdmNet.SoapModels.Change">
            <summary>
            Yet another SOAP Model
            </summary>
        </member>
        <member name="M:IdmNet.SoapModels.Change.#ctor">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="M:IdmNet.SoapModels.Change.#ctor(IdmNet.SoapModels.ModeType,System.String,System.String)">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="P:IdmNet.SoapModels.Change.Operation">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="T:IdmNet.SoapModels.ModeType">
            <summary>
            Yet another SOAP Model
            </summary>
        </member>
        <member name="F:IdmNet.SoapModels.ModeType.Replace">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="F:IdmNet.SoapModels.ModeType.Add">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="F:IdmNet.SoapModels.ModeType.Delete">
            <summary>
            Part of a SOAP model
            </summary>
        </member>
        <member name="T:IdmNet.SoapXmlSerializer">
            <summary>
            Class for serializing our SOAP messages for Identity Manager to consume
            </summary>
        </member>
        <member name="M:IdmNet.SoapXmlSerializer.#ctor(System.Type)">
            <summary>
            Build serilizer for specific type
            </summary>
            <param name="type">Type to serialize</param>
        </member>
        <member name="M:IdmNet.SoapXmlSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
            <summary>
            Required for SOAP serialization
            </summary>
            <param name="reader">SOAP stuff</param>
            <returns>SOAP stuff</returns>
        </member>
        <member name="M:IdmNet.SoapXmlSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
            <summary>
            SOAP stuff
            </summary>
            <param name="reader">SOAP stuff</param>
            <param name="verifyObjectName">SOAP stuff</param>
            <returns>SOAP stuff</returns>
        </member>
        <member name="M:IdmNet.SoapXmlSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
            <summary>
            SOAP stuff
            </summary>
            <param name="writer">SOAP stuff</param>
        </member>
        <member name="M:IdmNet.SoapXmlSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
            <summary>
            SOAP stuff
            </summary>
            <param name="writer">SOAP stuff</param>
            <param name="graph">SOAP stuff</param>
        </member>
        <member name="M:IdmNet.SoapXmlSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
            <summary>
            SOAP stuff
            </summary>
            <param name="writer">SOAP stuff</param>
            <param name="graph">SOAP stuff</param>
        </member>
    </members>
</doc>
